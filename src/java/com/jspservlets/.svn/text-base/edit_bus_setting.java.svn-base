/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.jspservlets;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;


/**
 *
 * @author admin
 */
public class edit_bus_setting extends HttpServlet {

    DBConnection db;
    Connection conn = null;
    PreparedStatement pstmt=null;
    Statement st =  null;
    ResultSet rs = null;

    HttpSession session=null;

    String businessdesc="", businessaddress="",city="",state="",pincode="",countrycode="",contactnumber="",contactname="";
    String user_name = "";
    String time_request_change="";
    int timeChanged = 0;

    /** 
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code> methods.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processtimeRequestChange(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException, SQLException {
        response.setContentType("text/html;charset=UTF-8");

        try{
            session = request.getSession(false);
        }catch(Exception e){

        }
        PrintWriter out = response.getWriter();
        try {
            try{
            user_name = session.getAttribute("username").toString();
            }catch(Exception e){
                
            }
            time_request_change = request.getParameter("tc");
            timeChanged = Integer.parseInt(time_request_change);

            saveTimeRequestChanges();
            response.sendRedirect("business_user_settings.jsp");



        } finally { 
            out.close();


        }

        
    } 

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException, SQLException {
        response.setContentType("text/html;charset=UTF-8");

        try{
            session = request.getSession(false);
        }catch(Exception e){

        }
        PrintWriter out = response.getWriter();
        try {
            try{
            user_name = session.getAttribute("username").toString();
            }catch(Exception e){

            }
            businessdesc = request.getParameter("businessdesc");
            businessaddress = request.getParameter("businessaddress");
            city = request.getParameter("city");
            state = request.getParameter("state");
            pincode = request.getParameter("pincode");
            countrycode = request.getParameter("countrycode");
            contactnumber = request.getParameter("contactnumber");
            contactname = request.getParameter("contactname");

            saveChanges();
            response.sendRedirect("business_user_settings.jsp");



        } finally {
            out.close();


        }


    }


    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /** 
     * Handles the HTTP <code>GET</code> method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        try {
            processtimeRequestChange(request, response);
        } catch (SQLException ex) {
            Logger.getLogger(edit_bus_setting.class.getName()).log(Level.SEVERE, null, ex);
        }
    } 

    /** 
     * Handles the HTTP <code>POST</code> method.
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        try {
            processRequest(request, response);
        } catch (SQLException ex) {
            Logger.getLogger(edit_bus_setting.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** 
     * Returns a short description of the servlet.
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>


    public void saveChanges() throws ServletException, SQLException{
            try {
            db = new DBConnection();

            conn = db.con;
            st =  db.stmt;
            try{
                String UPDATE_RECORD = "Update business_users set buss_desc='"+businessdesc+"', address='"+businessaddress+"', city='"+city+"', state='"+state+"', country='"+countrycode+"', pincode='"+pincode+"', contactno='"+contactnumber+"', contactname='"+contactname+"' where email_id='"+user_name+"';";
                        //Constants.logger.info("Insert Query is "+INSERT_RECORD);
                st.executeUpdate(UPDATE_RECORD);
            }catch(SQLException e){
                                com.server.Constants.logger.error("Error in Sql in qrCode_display.jsp in getting QR CODE Value "+e.getMessage());
                                throw new ServletException("SQL Exception.", e);
                            }
            }catch (Exception e) {
                          com.server.Constants.logger.error("Error in Sql in qrCode_display.jsp in getting QR CODE Value "+e.getMessage());
                          throw new ServletException("SQL Exception.", e);
                      } finally {
                      try {
                          if(rs != null) {
                              rs.close();
                              //Constants.logger.info("Closing rs Statement ");
                              rs = null;
                          }
                          db.closeConnection();

                      } catch (SQLException e) {
                            com.server.Constants.logger.error("Error in closing SQL in checksecretcode.java"+e.getMessage());
                      }
                   }


    }
    
    public void saveTimeRequestChanges() throws ServletException, SQLException{
            
        try {
            db = new DBConnection();

            conn = db.con;
            st =  db.stmt;
            try{
                String UPDATE_RECORD = "Update punch_card set restriction_time ="+timeChanged+" where business_userid= (Select business_users.business_userid from business_users where business_users.email_id='"+user_name+"');";
                        //Constants.logger.info("Insert Query is "+INSERT_RECORD);
                st.executeUpdate(UPDATE_RECORD);
            }catch(SQLException e){
                                com.server.Constants.logger.error("Error in Sql in  in getting QR CODE Value "+e.getMessage());
                                throw new ServletException("SQL Exception.", e);
                            }
            }catch (Exception e) {
                          com.server.Constants.logger.error("Error in Sql in qrCode_display.jsp in getting QR CODE Value "+e.getMessage());
                          throw new ServletException("SQL Exception.", e);
            } finally {
                      try {
                          if(rs != null) {
                              rs.close();
                              //Constants.logger.info("Closing rs Statement ");
                              rs = null;
                          }
                          db.closeConnection();

                      } catch (SQLException e) {
                            com.server.Constants.logger.error("Error in closing SQL in checksecretcode.java"+e.getMessage());
                      }
                   }

    }



}
